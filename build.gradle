plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	
	//// 2023/11/16 // 22:11 //
	// id 'com.github.eirslett.frontend' version '1.12.0'
	
	// 22:19
	// id 'com.moowork.node' version '2.2.3'
	
	// 22:23
	id 'com.github.node-gradle.node' version '3.3.1'	
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

//// 2023/11/16 // 22:11 //
// frontend.nodeVersion = '16.13.1'
// 
// tasks.named('installNpm') {
// 	dependsOn 'installNodeAndNpm'
// }

//// 22:19

// Configure the Node.js version and npm installaton
// node {
// 	version = '16.13.1'
// 	npmVersion = '8.3.1' // Optional: Specify a specific npm version
// 	download = true
// }

// Make sure the "npmInstall" task depends on "downloadNode" and "npmSetup"
// tasks.named('npmInstall') {
// 	dependsOn 'downloadNode', 'npmSetup'
// }

//// 22:23
// Configure the Node.js version
node {
	version = '16.13.1'
}

// Make sure the "npmInstall" task depends on "npmSetup"
tasks.named('npmInstall') {
	dependsOn 'npmSetup'
}

